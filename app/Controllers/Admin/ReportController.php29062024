<?php
namespace App\Controllers\admin;
use App\Controllers\BaseController;
use App\Models\CommonModel;
class ReportController extends BaseController {
    private $model;  //This can be accessed by all class methods
	public function __construct()
    {
        $session = \Config\Services::session();
        if(!$session->get('is_admin_login')) {
            return redirect()->to('/Administrator');
        }
        $model = new CommonModel();
        $this->data = array(
            'model'                 => $model,
            'session'               => $session,
            'title'                 => 'Report',
            'controller_route'      => 'reports',
            'controller'            => 'ReportController',
            'table_name'            => 'effort_type',
            'primary_key'           => 'id'
        );
    }
    public function advanceSearch()
    {
        $data['moduleDetail']       = $this->data;
        $title                      = 'Manage '.$this->data['title'].' : Advance Search';
        $page_name                  = 'report/advance-search';
        $order_by[0]                = array('field' => 'status', 'type' => 'DESC');
        $order_by[1]                = array('field' => 'name', 'type' => 'ASC');
        $data['users']              = $this->data['model']->find_data('user', 'array', ['status!=' => '3'], 'id,name,status', '', '', $order_by); 
        
        // $data['projectwise_users']  = $this->data['model']->find_data('user', 'array', ['status!=' => '3'], 'id,name,status', '', '', $order_by); 

        // $order_by[0]                = array('field' => 'project.status', 'type' => 'ASC');
        $order_by[0]                = array('field' => 'project.name', 'type' => 'ASC');
        $join[0]                    = ['table' => 'project_status', 'field' => 'id', 'table_master' => 'project', 'field_table_master' => 'status', 'type' => 'INNER'];
        $join[1]                    = ['table' => 'client', 'field' => 'id', 'table_master' => 'project', 'field_table_master' => 'client_id', 'type' => 'INNER'];
        $user_type                  = $this->session->get('user_type');
        $user_id                    = $this->session->get('user_id');
        
        if($user_type == 'client'){
            $data['projects']           = $this->data['model']->find_data('project', 'array', ['project.status!=' => 13, 'project.client_id' => $user_id], 'project.id,project.name,project_status.name as project_status_name,client.name as client_name', $join, '', $order_by);
            $data['closed_projects']    = $this->data['model']->find_data('project', 'array', ['project.status' => 13, 'project.client_id' => $user_id], 'project.id,project.name,project_status.name as project_status_name,client.name as client_name', $join, '', $order_by);            
            $project_id = $data['projects'][0]->id;
            $sql = "SELECT DISTINCT user.status, user.name, user.id FROM `timesheet` INNER JOIN user on timesheet.user_id = user.id WHERE timesheet.project_id = $project_id and user.status = '1';";
            $rows = $this->db->query($sql)->getResult();
            $data['projectwise_user'] = $rows;
            //pr($data['projectwise_user']);
        } else {
            $data['projects']           = $this->data['model']->find_data('project', 'array', ['project.status!=' => 13], 'project.id,project.name,project_status.name as project_status_name,client.name as client_name', $join, '', $order_by);
            $data['closed_projects']    = $this->data['model']->find_data('project', 'array', ['project.status' => 13], 'project.id,project.name,project_status.name as project_status_name,client.name as client_name', $join, '', $order_by);
        }
        
        
        $data['response']           = [];
        $data['search_user_id']     = 'all';
        $data['search_project_id']  = '';
        $data['search_day_id']      = 'all';
        $data['is_date_range']      = 0;
        $data['search_range_from']  = '';
        $data['search_range_to']    = '';
        $data['graph_users']        = '';
        $data['graph_user_data']    = '';
        if($this->request->getGet('mode') == 'advance_search'){
             //pr($this->request->getGet());
            $search_user_id     = $this->request->getGet('search_user_id');
            $search_project_id  = $this->request->getGet('search_project_id');
            $search_day_id      = $this->request->getGet('search_day_id');
            $search_range_from  = $this->request->getGet('search_range_from');
            $search_range_to    = $this->request->getGet('search_range_to');
            if(array_key_exists('is_date_range', $this->request->getGet())){
                $dayQuery = "date_added >= '$search_range_from' and date_added <= '$search_range_to'";
                $dayQuery4 = "t.date_added >= '$search_range_from' and t.date_added <= '$search_range_to'";
                if($search_user_id == 'all' && $search_project_id == 'all'){
                    $sql = "select id,project_id,status_id,user_id,description,hour,min,effort_type,date_today,date_added from timesheet where ".$dayQuery." order by id desc";
                    $sql2 = "select user_id,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." group by user_id";
                    $sql3 = "select effort_type,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." group by effort_type";
                    $sql4 = "select t.project_id,sum(t.hour) as tot_hour,sum(t.min) as tot_min from timesheet as t inner join project as p on p.id = t.project_id where ".$dayQuery4." group by t.project_id order by p.name asc";
                } elseif($search_user_id != 'all' && $search_project_id == 'all'){
                    $sql = "select id,project_id,status_id,user_id,description,hour,min,effort_type,date_today,date_added from timesheet where ".$dayQuery." and user_id = '$search_user_id' order by id desc";
                    $sql2 = "select user_id,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and user_id = '$search_user_id' group by user_id";
                    $sql3 = "select effort_type,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and user_id = '$search_user_id' group by effort_type";
                    $sql4 = "select t.project_id,sum(t.hour) as tot_hour,sum(t.min) as tot_min from timesheet as t inner join project as p on p.id = t.project_id where ".$dayQuery4." and t.user_id = '$search_user_id' group by t.project_id order by p.name asc";
                } elseif($search_user_id == 'all' && $search_project_id != 'all'){
                    $sql = "select id,project_id,status_id,user_id,description,hour,min,effort_type,date_today,date_added from timesheet where ".$dayQuery." and project_id = '$search_project_id' order by id desc";
                    $sql2 = "select user_id,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and project_id = '$search_project_id' group by user_id";
                    $sql3 = "select effort_type,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and project_id = '$search_project_id' group by effort_type";
                    $sql4 = "select t.project_id,sum(t.hour) as tot_hour,sum(t.min) as tot_min from timesheet as t inner join project as p on p.id = t.project_id where ".$dayQuery4." and t.project_id = '$search_project_id' group by t.project_id order by p.name asc";
                } elseif($search_user_id != 'all' && $search_project_id != 'all'){
                    $sql = "select id,project_id,status_id,user_id,description,hour,min,effort_type,date_today,date_added from timesheet where ".$dayQuery." and project_id = '$search_project_id' and user_id = '$search_user_id' order by id desc";
                    $sql2 = "select user_id,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and project_id = '$search_project_id' and user_id = '$search_user_id' group by user_id";
                    $sql3 = "select effort_type,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and project_id = '$search_project_id' and user_id = '$search_user_id' group by effort_type";
                    $sql4 = "select t.project_id,sum(t.hour) as tot_hour,sum(t.min) as tot_min from timesheet as t inner join project as p on p.id = t.project_id where ".$dayQuery4." and t.project_id = '$search_project_id' and t.user_id = '$search_user_id' group by t.project_id order by p.name asc";
                }
                $data['is_date_range']      = 1;
            } else {
                $today          = date('Y-m-d');
                $yesterday      = date('Y-m-d',strtotime("-1 days"));
                $lastMonday     = date('Y-m-d',strtotime('last Monday'));
                $lastWeekmonday = date('Y-m-d', strtotime('monday last week'));
                $lastWeeksunday = date('Y-m-d', strtotime('sunday last week'));
                $currentMonthFirstDay = date('Y-m')."-01";
                $firstDayLastMonth = date("Y-m-d", mktime(0, 0, 0, date("m")-1, 1));
                $lastDayLastMonth = date("Y-m-d", mktime(0, 0, 0, date("m"), 0));
                $last7Day = date('Y-m-d', strtotime('-7 days'));
                $last30Day = date('Y-m-d', strtotime('-30 days'));
                $data['is_date_range']      = 0;
                if($search_day_id == 'all'){
                    $dayQuery = "date_added >= '2018-05-01'";
                    $dayQuery4 = "t.date_added >= '2018-05-01'";
                } elseif($search_day_id == 'today'){
                    $dayQuery = "date_added = '$today'";
                    $dayQuery4 = "t.date_added = '$today'";
                } elseif($search_day_id == 'yesterday'){
                    $dayQuery = "date_added = '$yesterday'";
                    $dayQuery4 = "t.date_added = '$yesterday'";
                } elseif($search_day_id == 'this_week'){
                    $dayQuery = "date_added >= '$lastMonday' and date_added <= '$today'";
                    $dayQuery4 = "t.date_added >= '$lastMonday' and t.date_added <= '$today'";
                } elseif($search_day_id == 'last_week'){
                    $dayQuery = "date_added >= '$lastWeekmonday' and date_added <= '$lastWeeksunday'";
                    $dayQuery4 = "t.date_added >= '$lastWeekmonday' and t.date_added <= '$lastWeeksunday'";
                } elseif($search_day_id == 'this_month'){
                    $dayQuery = "date_added >= '$currentMonthFirstDay' and date_added <= '$today'";
                    $dayQuery4 = "t.date_added >= '$currentMonthFirstDay' and t.date_added <= '$today'";
                } elseif($search_day_id == 'last_month'){
                    $dayQuery = "date_added >= '$firstDayLastMonth' and date_added <= '$lastDayLastMonth'";
                    $dayQuery4 = "t.date_added >= '$firstDayLastMonth' and t.date_added <= '$lastDayLastMonth'";
                } elseif($search_day_id == 'last_7_days'){
                    $dayQuery = "date_added >= '$last7Day' and date_added <= '$yesterday'";
                    $dayQuery4 = "t.date_added >= '$last7Day' and t.date_added <= '$yesterday'";
                } elseif($search_day_id == 'last_30_days'){
                    $dayQuery = "date_added >= '$last30Day' and date_added <= '$yesterday'";
                    $dayQuery4 = "t.date_added >= '$last30Day' and t.date_added <= '$yesterday'";
                }
                
                if($search_user_id == 'all' && $search_project_id == 'all'){
                    $sql = "select id,project_id,status_id,user_id,description,hour,min,effort_type,date_today,date_added from timesheet where ".$dayQuery." order by id desc";
                    $sql2 = "select user_id,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." group by user_id";
                    $sql3 = "select effort_type,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." group by effort_type";
                    $sql4 = "select t.project_id,sum(t.hour) as tot_hour,sum(t.min) as tot_min from timesheet as t inner join project as p on p.id = t.project_id where ".$dayQuery4." group by t.project_id order by p.name asc";
                } elseif($search_user_id != 'all' && $search_project_id == 'all'){
                    $sql = "select id,project_id,status_id,user_id,description,hour,min,effort_type,date_today,date_added from timesheet where ".$dayQuery." and user_id = '$search_user_id' order by id desc";
                    $sql2 = "select user_id,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and user_id = '$search_user_id' group by user_id";
                    $sql3 = "select effort_type,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and user_id = '$search_user_id' group by effort_type";
                    $sql4 = "select t.project_id,sum(t.hour) as tot_hour,sum(t.min) as tot_min from timesheet as t inner join project as p on p.id = t.project_id where ".$dayQuery4." and t.user_id = '$search_user_id' group by t.project_id order by p.name asc";
                } elseif($search_user_id == 'all' && $search_project_id != 'all'){
                    $sql = "select id,project_id,status_id,user_id,description,hour,min,effort_type,date_today,date_added from timesheet where ".$dayQuery." and project_id = '$search_project_id' order by id desc";
                    $sql2 = "select user_id,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and project_id = '$search_project_id' group by user_id";
                    $sql3 = "select effort_type,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and project_id = '$search_project_id' group by effort_type";
                    $sql4 = "select t.project_id,sum(t.hour) as tot_hour,sum(t.min) as tot_min from timesheet as t inner join project as p on p.id = t.project_id where ".$dayQuery4." and t.project_id = '$search_project_id' group by t.project_id order by p.name asc";
                } elseif($search_user_id != 'all' && $search_project_id != 'all'){
                    $sql = "select id,project_id,status_id,user_id,description,hour,min,effort_type,date_today,date_added from timesheet where ".$dayQuery." and project_id = '$search_project_id' and user_id = '$search_user_id' order by id desc";
                    $sql2 = "select user_id,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and project_id = '$search_project_id' and user_id = '$search_user_id' group by user_id";
                    $sql3 = "select effort_type,sum(hour) as tot_hour,sum(min) as tot_min from timesheet where ".$dayQuery." and project_id = '$search_project_id' and user_id = '$search_user_id' group by effort_type";
                    $sql4 = "select t.project_id,sum(t.hour) as tot_hour,sum(t.min) as tot_min from timesheet as t inner join project as p on p.id = t.project_id where ".$dayQuery4." and t.project_id = '$search_project_id' and t.user_id = '$search_user_id' group by t.project_id order by p.name asc";
                }
            }
            // echo $sql;die;
            $rows = $this->db->query($sql)->getResult();
            $response = [];
            $total_effort_in_mins = 0;
            if($rows){
                $sl=1;
                foreach($rows as $row){
                    $getProject = $this->common_model->find_data('project', 'row', ['id' => $row->project_id], 'name');
                    $getUser = $this->common_model->find_data('user', 'row', ['id' => $row->user_id], 'name');
                    $getProjectStatus = $this->common_model->find_data('project_status', 'row', ['id' => $row->status_id], 'name');
                    $getEffortType = $this->common_model->find_data('effort_type', 'row', ['id' => $row->effort_type], 'name');
                    $effort_time = $row->hour.':'.$row->min;
                    $response[] = [
                        'sl_no'             => $sl++,
                        'id'                => $row->id,
                        'project_name'      => (($getProject)?$getProject->name:''),
                        'user_name'         => (($getUser)?$getUser->name:''),
                        'work_date'         => date_format(date_create($row->date_added), "d-m-Y"),
                        'date_today'        => date_format(date_create($row->date_today), "d-m-Y"),
                        'description'       => $row->description,
                        'effort_time'       => $effort_time,
                        'hour'              => $row->hour,
                        'min'               => $row->min,
                        'project_status'    => (($getProjectStatus)?$getProjectStatus->name:''),
                        'effort_type'       => (($getEffortType)?$getEffortType->name:''),
                    ];
                    $total_hour_min = ($row->hour * 60); // 0*60 = 0
                    $total_min_min = $row->min; // 30
                    $total_effort_in_mins += ($total_hour_min + $total_min_min);
                }
            }
            $data['response']               = $response;
            $data['total_effort_in_mins']   = $total_effort_in_mins;
            $data['search_user_id']         = $search_user_id;
            $data['search_project_id']      = $search_project_id;
            $data['search_day_id']          = $search_day_id;
            $data['search_range_from']      = $search_range_from;
            $data['search_range_to']        = $search_range_to;

            /* user graph */
                $getUserGraphs = $this->db->query($sql2)->getResult();
                $graphUsers     = [];
                $graphUserData  = [];
                if($getUserGraphs){
                    foreach($getUserGraphs as $getUserGraph){
                        $getUser = $this->common_model->find_data('user', 'row', ['id' => $getUserGraph->user_id], 'name');
                        $tot_hour               = $getUserGraph->tot_hour * 60;
                        $tot_min                = $getUserGraph->tot_min;
                        $totMins                = $tot_hour + $tot_min;
                        $totalBooked            = intdiv($totMins, 60).'.'. ($totMins % 60);
                        $graphUserData[]        = "'".$totalBooked."'";
                        $graphUsers[]           = (($getUser)?"'".$getUser->name." [".$totalBooked."]'":'');
                    }
                }
                // pr($graphUsers,0);
                // pr($graphUserData);
                $data['graph_users']            = $graphUsers;
                $data['graph_user_data']        = $graphUserData;
            /* user graph */
            /* type graph */
                $getTypeGraphs = $this->db->query($sql3)->getResult();
                $graphTypes     = [];
                $graphTypeData  = [];
                if($getTypeGraphs){
                    foreach($getTypeGraphs as $getTypeGraph){
                        $getEffortType          = $this->common_model->find_data('effort_type', 'row', ['id' => $getTypeGraph->effort_type], 'name');
                        
                        $tot_hour               = $getTypeGraph->tot_hour * 60;
                        $tot_min                = $getTypeGraph->tot_min;
                        $totMins                = $tot_hour + $tot_min;
                        $totalBooked            = intdiv($totMins, 60).'.'. ($totMins % 60);
                        $graphTypeData[]        = "'".$totalBooked."'";
                        $graphTypes[]           = (($getEffortType)?"'".$getEffortType->name." [".$totalBooked."]'":'');
                    }
                }
                // pr($graphTypes,0);
                // pr($graphTypeData);
                $data['graph_types']            = $graphTypes;
                $data['graph_type_data']        = $graphTypeData;
            /* type graph */
            /* project graph */
                $getProjectGraphs = $this->db->query($sql4)->getResult();
                $graphProjects     = [];
                $graphProjectData  = [];
                if($getProjectGraphs){
                    foreach($getProjectGraphs as $getProjectGraph){
                        $getProject          = $this->common_model->find_data('project', 'row', ['id' => $getProjectGraph->project_id], 'name');
                        
                        $tot_hour               = $getProjectGraph->tot_hour * 60;
                        $tot_min                = $getProjectGraph->tot_min;
                        $totMins                = $tot_hour + $tot_min;
                        $totalBooked            = intdiv($totMins, 60).'.'. ($totMins % 60);
                        $graphProjectData[]     = "'".$totalBooked."'";
                        $graphProjects[]        = (($getProject)?"'".$getProject->name." [".$totalBooked."]'":'');
                    }
                }
                // pr($graphProjects,0);
                // pr($graphProjectData);
                $data['graph_projects_bar_height']            = ((count($graphProjects) > 1)?(count($graphProjects) * 30):100);
                $data['graph_projects']            = $graphProjects;
                $data['graph_project_data']        = $graphProjectData;
            /* project graph */
        }
        echo $this->layout_after_login($title,$page_name,$data);
    }

    public function effortType() 
    {
        $data['moduleDetail']       = $this->data;
        $title                      = 'Manage '.$this->data['title'].' : Effort Report';               
        $page_name                  = 'report/effort-report';
        $data['userType']                           = $this->session->user_type;
        $userType                   = $data['userType'];
        $userId                             = $this->session->user_id;
        $order_by[0]        = array('field' => 'status', 'type' => 'DESC');
        $order_by[1]        = array('field' => 'name', 'type' => 'ASC');
        $users              = $this->common_model->find_data('user', 'array', ['status!=' => '3', 'is_tracker_user' => 1], 'id,name,status', '', '', $order_by);
        $response = [];
        $year = [];
        $sl=1;
        if($users){            
            foreach($users as $row){
                if($this->request->getGet('mode') == 'year'){
                    //  pr($this->request->getGet('year'));                    
                        $year = $this->request->getGet('year');                
                }
                else{
                    $year = date('Y');
                }
                    $monthYear1 = $year.'-'.date('01');
                    $yearString = $year;                                        
                    $jan_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '%$monthYear1%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 1 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result1 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    } else{
                        $result1 ='';
                    }
                    if($jan_booked){
                        $tothour = $jan_booked->tothour * 60;
                        $totmin = $jan_booked->totmin;
                        $totalMin = ($tothour + $totmin);
                        $totalBooked1            = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                    }
                    $monthYear2 = $year.'-'.date('02');
                    $yearString = $year;
                    $feb_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '%$monthYear2%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 2 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result2 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    }else{
                        $result2 ='';
                    }
                    if($feb_booked){
                        $tothour = $feb_booked->tothour * 60;
                        $totmin = $feb_booked->totmin;
                        $totalMin = ($tothour + $totmin);
                        $totalBooked2            = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                    }
                    $monthYear3 = $year.'-'.date('03');
                    $yearString = $year;
                    $mar_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id=$row->id and date_added LIKE '%$monthYear3%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 3 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result3 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    }else{
                        $result3 ='';
                    }
                    if($mar_booked){
                        $tothour3 = $mar_booked->tothour * 60;
                        $totmin3 = $mar_booked->totmin;
                        $totalMin3 = ($tothour3 + $totmin3);
                        $totalBooked3            = intdiv($totalMin3, 60).'.'. ($totalMin3 % 60);
                    }
                    $monthYear4 = $year.'-'.date('04');
                    $yearString = $year;
                    $apr_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '%$monthYear4%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 4 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result4 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    }else{
                        $result4 ='';
                    }
                    if($apr_booked){
                        $tothour = $apr_booked->tothour * 60;
                        $totmin = $apr_booked->totmin;
                        $totalMin = ($tothour + $totmin);
                        $totalBooked4            = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                    }
                    $monthYear5 = $year.'-'.date('05');
                    $yearString = $year;
                    $may_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '%$monthYear5%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 5 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result5 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    }else{
                        $result5 ='';
                    }
                    if($may_booked){
                        $tothour = $may_booked->tothour * 60;
                        $totmin = $may_booked->totmin;
                        $totalMin = ($tothour + $totmin);
                        $totalBooked5            = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                    }
                    $monthYear6 = $year.'-'.date('06');
                    $yearString = $year;
                    $jun_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '%$monthYear6%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 6 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result6 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    }else{
                        $result6 ='';
                    }
                    if($jun_booked){
                        $tothour = $jun_booked->tothour * 60;
                        $totmin = $jun_booked->totmin;
                        $totalMin = ($tothour + $totmin);
                        $totalBooked6            = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                    }
                    $monthYear7 = $year.'-'.date('07');
                    $yearString = $year;
                    $jul_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '%$monthYear7%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 7 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result7 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    }else{
                        $result7 ='';
                    }
                    if($jul_booked){
                        $tothour = $jul_booked->tothour * 60;
                        $totmin = $jul_booked->totmin;
                        $totalMin = ($tothour + $totmin);
                        $totalBooked7            = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                    }
                    $monthYear8 = $year.'-'.date('08');
                    $yearString = $year;
                    $aug_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '%$monthYear8%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 8 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result8 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    }else{
                        $result8 ='';
                    }
                    if($aug_booked){
                        $tothour = $aug_booked->tothour * 60;
                        $totmin = $aug_booked->totmin;
                        $totalMin = ($tothour + $totmin);
                        $totalBooked8            = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                    }
                    $monthYear9 = $year.'-'.date('09');
                    $yearString = $year;
                    $sep_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '%$monthYear9%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 9 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result9 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    }else{
                        $result9 ='';
                    }
                    if($sep_booked){
                        $tothour = $sep_booked->tothour * 60;
                        $totmin = $sep_booked->totmin;
                        $totalMin = ($tothour + $totmin);
                        $totalBooked9            = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                    }
                    $monthYear10 = $year.'-'.date('10');
                    $yearString = $year;
                    $oct_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '%$monthYear10%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 10 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result10 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    }else{
                        $result10 ='';
                    }
                    if($oct_booked){
                        $tothour = $oct_booked->tothour * 60;
                        $totmin = $oct_booked->totmin;
                        $totalMin = ($tothour + $totmin);
                        $totalBooked10            = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                    }
                    $monthYear11 = $year.'-'.date('11');
                    $yearString = $year;
                    $nov_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '%$monthYear11%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 11 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result11 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    }else{
                        $result11 ='';
                    }
                    if($nov_booked){
                        $tothour = $nov_booked->tothour * 60;
                        $totmin = $nov_booked->totmin;
                        $totalMin = ($tothour + $totmin);
                        $totalBooked11            = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                    }
                    $monthYear12 = $year.'-'.date('12');
                    $yearString = $year;
                    $dec_booked = $this->db->query("SELECT sum(hour) as tothour, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '%$monthYear12%'")->getRow();
                    $getDesktimeHour = $this->db->query("SELECT * FROM `desktime_sheet_tracking`  WHERE year_upload = '$yearString' AND month_upload = 12 AND user_id = '$row->id'")->getRow();
                    if ($getDesktimeHour) {
                    $result12 = substr($getDesktimeHour->total_desktime_hour, 0, -3);
                    }else{
                        $result12 ='';
                    }
                    if($dec_booked){
                        $tothour = $dec_booked->tothour * 60;
                        $totmin = $dec_booked->totmin;
                        $totalMin = ($tothour + $totmin);
                        $totalBooked12            = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                    }                        
                    
                    $data['year']        = $yearString;
                    $response[] = [
                        'sl_no'         => $sl++,                        
                        'name'          => $row->name,
                        'jan_booked'    => $totalBooked1,
                        'feb_booked'    => $totalBooked2,
                        'mar_booked'    => $totalBooked3,
                        'apr_booked'    => $totalBooked4,
                        'may_booked'    => $totalBooked5,
                        'jun_booked'    => $totalBooked6,
                        'jul_booked'    => $totalBooked7,
                        'aug_booked'    => $totalBooked8,
                        'sep_booked'    => $totalBooked9,
                        'oct_booked'    => $totalBooked10,
                        'nov_booked'    => $totalBooked11,
                        'dec_booked'    => $totalBooked12,
                        'jan_desklog'   => $result1,
                        'feb_desklog'   => $result2,
                        'mar_desklog'   => $result3,
                        'apr_desklog'   => $result4,
                        'may_desklog'   => $result5,
                        'jun_desklog'   => $result6,
                        'jul_desklog'   => $result7,
                        'aug_desklog'   => $result8,
                        'sep_desklog'   => $result9,
                        'oct_desklog'   => $result10,
                        'nov_desklog'   => $result11,
                        'dec_desklog'   => $result12,
                    ];
                
            }
        }
        $data['responses']                   = $response;

        $last7DaysResponses = [];
        $arr                = [];
        $users_data              = $this->common_model->find_data('user', 'array', ['status!=' => '3', 'is_tracker_user' => 1], 'id,name,status', '', '', $order_by);                        
        $arr = $this->getLastNDays(7, 'Y-m-d');
        //print_r($arr);die;
        if($user = ($userType == 'admin') ? $users_data : $users){
            foreach($user as $row){
                if(!empty($arr)){
                    $reports = [];
                    for($k=0;$k<count($arr);$k++){
                        $loopDate           = $arr[$k];
                        $dayWiseBooked      = $this->db->query("SELECT sum(hour) as tothour, date_today, sum(min) as totmin FROM `timesheet` where user_id='$row->id' and date_added LIKE '$loopDate'")->getRow();
                        $tothour                = $dayWiseBooked->tothour * 60;
                        $totmin                 = $dayWiseBooked->totmin;
                        $totalMin               = ($tothour + $totmin);
                        $booked_effort          = intdiv($totalMin, 60).'.'. ($totalMin % 60);
                        $workdate = date_create($loopDate);
                        $entrydate = date_create($dayWiseBooked->date_today);                                                       
                        $reports[] = [
                            'booked_date'   => date_format(date_create($loopDate), "d-m-Y"),
                            'booked_effort' => $booked_effort,
                            'booked_today' => date_format(date_create($dayWiseBooked->date_today), "d-m-Y")                                
                        ];
                    }
                }
                $last7DaysResponses[] = [
                    'name'      => $row->name,
                    'reports'   => $reports,
                ];
            }
        }            
        $data['arr']                        = $arr;
        $data['last7DaysResponses']         = $last7DaysResponses;   
        echo $this->layout_after_login($title,$page_name,$data);
    }
    public function getLastNDays($days, $format = 'd/m'){
        $m = date("m"); $de= date("d"); $y= date("Y");
        $dateArray = array();
        for($i=0; $i<=$days-1; $i++){
            $dateArray[] = date($format, mktime(0,0,0,$m,($de-$i),$y)); 
        }
        return array_reverse($dateArray);
    }
}